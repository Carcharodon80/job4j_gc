1. Размер объектов.

Размер объектов различается для разных JVM и зависит от разрядности ОС.

Примерный размер для 64x:

1.1 class User {
    }

new User() - 16 байт (заголовок 12 байт + выравнивание до кратности 8 байтам)

1.2 class User {
    private int age;

    public User(int age) {
        this.age = age;
    }
}

new User (30) - 16 байт (заголовок 12 байт + int age 4 байта)

1.3 class User {
    private int age;
    private String name;
    
    public User(int age, String name) {
        this.age = age;
        this.name = name;
    }
}

new User (30, "Max") - 72 байта (заголовок 12 байт + int age 4 байта + ссылка на String name 8 байт + 
                                 String name 48 байт (заголовок 12 байт + ссылка на массив 8 байт + массив 24 байта + выравнивание))


2. Вызов Garbage Collector.

Спровоцировать вызов сборщика мусора можно, изменив максимальный размер Heap с помощью ключа -XmxNm.
При попытке создать 100000 объектов User, выставив начальный размер кучи 1 Mb и максимальный размер:
2 Mb - исключение OutOfMemory (сборщик даже не успел запуститься), 
4 Mb - сборщик запускался, но не справился - выпало исключение, удалялось от 10000 до 40000 объектов,
10 Mb - сборщик запускался, иногда выбрасывалось исключение, 
20 Mb - сборщик запускался, объекты удалялись, программа выполнилась. 
Впрочем, сборщик также вызывался, если оставить размер кучи без изменений (удалялось от 200 до 20000 объектов).





